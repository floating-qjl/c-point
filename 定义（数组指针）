#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//参数是指针的形式
void print1(int(*p)[5], int x, int y)
//二维数组，相当于每行一个一维数组
{
	int a = 0;
	for (a = 0;a < x;a++)
	{
		int b = 0;
		for (b = 0;b < y;b++)
		{
			//printf("%d ", *(*(p + a) + b));
			//printf("%d ", *(p[a] + b));
			//printf("%d ", p[a][b]);
			printf("%d ", (*(p + a)) [b]);
		}
		printf("\n");
	}
}
int main()
{
	//int* p = NULL; p是整形指针，指向整形的指针 - 可以存放整形的地址
	//char* pc = NULL;pc是字符指针，指向字符的指针 - 可以存放字符的地址
	//	            数组指针，指向数组的指针 - 存放数组的地址
	//int arr[] = { 0 };
	//arr - 首元素的地址
	//&arr[0] - 首元素地址
	//&arr - 数组的地址

	//int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
	//int(*p)[10] = &arr;//存放数组的指针
	//[]优先级大于*，因此不加（）则为指针数组
	//此时p就是数组指针，指向一个大小为10个整形的数组
	//int i = 0;
	//for (i = 0;i < 10;i++)
	//{
		//printf("%d ", (*p)[i]);
		//printf("%d ", *(*p+i));
    //}

	//char* arr2[5];
	//char* (*pa)[5] = &arr2;


	int arr[3][5] = { {1,1,1,1,1},{2,2,2,2,2},{3,3,3,3,3} };
	print1(arr, 3, 5);


	//int (*arr[10])[5];
	//这里arr是一个指针数组，有十个元素，每个元素是一个指针，该数组指针指向的数组有5个元素，每个元素是int
	return 0;
}
