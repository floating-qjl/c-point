#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <windows.h>
//枚举类型
enum Color
{
	//枚举的可能取值-常量
	RED,
	YELLOW=5,//赋予初始值，不属于改变常量
	BLUE
	//枚举成员，默认初始值为0，1，2
	//此时赋予后初始值为0，5，6
};
int main()
{
	enum Color c = BLUE;
	//c = 2 ,两个类型并不相同，在c上可以运行，而c++不行，因此不推荐这样写
	//BLUE = 8 ,这样写改变了初始值常量，是错误的
	printf("%d %d %d\n", RED, YELLOW, BLUE);//可以打印赋予或默认的初始值
	//用 #define 也可以定义常量，但使用枚举更好，原因是：
	//1.增加了代码的可读性和可维护性
	//2.和#define定义的标识符比较枚举有类型检查，更加严谨
	//3.放置了命名污染（封装）
	//4.便于调试 define定义在执行程序时会直接替换成定义的数字，但是编译者看不到这样的过程，不便于判断和调试
	//5.使用方便，一次可以定义多个常量
	return 0;
}
